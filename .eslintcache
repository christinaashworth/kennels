[{"/Users/christinaashworth/workspace/kennels/src/index.js":"1","/Users/christinaashworth/workspace/kennels/src/components/Kennel.js":"2","/Users/christinaashworth/workspace/kennels/src/components/animal/AnimalCard.js":"3","/Users/christinaashworth/workspace/kennels/src/components/customer/Customer.js":"4","/Users/christinaashworth/workspace/kennels/src/components/employee/Employee.js":"5","/Users/christinaashworth/workspace/kennels/src/components/location/Location.js":"6","/Users/christinaashworth/workspace/kennels/src/components/nav/NavBar.js":"7","/Users/christinaashworth/workspace/kennels/src/components/ApplicationViews.js":"8","/Users/christinaashworth/workspace/kennels/src/components/Home.js":"9","/Users/christinaashworth/workspace/kennels/src/components/animal/AnimalProvider.js":"10","/Users/christinaashworth/workspace/kennels/src/components/animal/AnimalList.js":"11","/Users/christinaashworth/workspace/kennels/src/components/customer/CustomerList.js":"12","/Users/christinaashworth/workspace/kennels/src/components/customer/CustomerProvider.js":"13","/Users/christinaashworth/workspace/kennels/src/components/employee/EmployeeList.js":"14","/Users/christinaashworth/workspace/kennels/src/components/employee/EmployeeProvider.js":"15","/Users/christinaashworth/workspace/kennels/src/components/location/LocationProvider.js":"16","/Users/christinaashworth/workspace/kennels/src/components/location/LocationList.js":"17","/Users/christinaashworth/workspace/kennels/src/components/animal/AnimalForm.js":"18","/Users/christinaashworth/workspace/kennels/src/components/employee/EmployeeForm.js":"19","/Users/christinaashworth/workspace/kennels/src/components/location/LocationForm.js":"20","/Users/christinaashworth/workspace/kennels/src/components/animal/AnimalDetail.js":"21","/Users/christinaashworth/workspace/kennels/src/components/employee/EmployeeDetail.js":"22","/Users/christinaashworth/workspace/kennels/src/components/location/LocationDetail.js":"23","/Users/christinaashworth/workspace/kennels/src/components/auth/Register.js":"24","/Users/christinaashworth/workspace/kennels/src/components/auth/Login.js":"25"},{"size":334,"mtime":1611249688457,"results":"26","hashOfConfig":"27"},{"size":736,"mtime":1611848331223,"results":"28","hashOfConfig":"27"},{"size":397,"mtime":1611694310582,"results":"29","hashOfConfig":"27"},{"size":286,"mtime":1611334909504,"results":"30","hashOfConfig":"27"},{"size":527,"mtime":1611778922668,"results":"31","hashOfConfig":"27"},{"size":526,"mtime":1611778069625,"results":"32","hashOfConfig":"27"},{"size":891,"mtime":1611250502282,"results":"33","hashOfConfig":"27"},{"size":2905,"mtime":1611780076624,"results":"34","hashOfConfig":"27"},{"size":358,"mtime":1611250512826,"results":"35","hashOfConfig":"27"},{"size":1568,"mtime":1611769629319,"results":"36","hashOfConfig":"27"},{"size":698,"mtime":1611694329517,"results":"37","hashOfConfig":"27"},{"size":644,"mtime":1611335026180,"results":"38","hashOfConfig":"27"},{"size":862,"mtime":1611335058661,"results":"39","hashOfConfig":"27"},{"size":799,"mtime":1611694361392,"results":"40","hashOfConfig":"27"},{"size":1386,"mtime":1611777116830,"results":"41","hashOfConfig":"27"},{"size":1416,"mtime":1611776498307,"results":"42","hashOfConfig":"27"},{"size":803,"mtime":1611610859912,"results":"43","hashOfConfig":"27"},{"size":5413,"mtime":1611769904009,"results":"44","hashOfConfig":"27"},{"size":3176,"mtime":1611778861064,"results":"45","hashOfConfig":"27"},{"size":3723,"mtime":1611776751817,"results":"46","hashOfConfig":"27"},{"size":1203,"mtime":1611769704801,"results":"47","hashOfConfig":"27"},{"size":895,"mtime":1611778475909,"results":"48","hashOfConfig":"27"},{"size":1270,"mtime":1611776365568,"results":"49","hashOfConfig":"27"},{"size":3132,"mtime":1611848361416,"results":"50","hashOfConfig":"27"},{"size":2171,"mtime":1611848361417,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"n98svd",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/christinaashworth/workspace/kennels/src/index.js",[],["114","115"],"/Users/christinaashworth/workspace/kennels/src/components/Kennel.js",[],"/Users/christinaashworth/workspace/kennels/src/components/animal/AnimalCard.js",[],"/Users/christinaashworth/workspace/kennels/src/components/customer/Customer.js",[],"/Users/christinaashworth/workspace/kennels/src/components/employee/Employee.js",[],"/Users/christinaashworth/workspace/kennels/src/components/location/Location.js",[],["116","117"],"/Users/christinaashworth/workspace/kennels/src/components/nav/NavBar.js",[],"/Users/christinaashworth/workspace/kennels/src/components/ApplicationViews.js",[],"/Users/christinaashworth/workspace/kennels/src/components/Home.js",[],"/Users/christinaashworth/workspace/kennels/src/components/animal/AnimalProvider.js",[],"/Users/christinaashworth/workspace/kennels/src/components/animal/AnimalList.js",["118"],"import React, { useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AnimalContext } from \"./AnimalProvider\";\nimport { AnimalCard } from \"./AnimalCard\";\nimport \"./Animal.css\";\n\nexport const AnimalList = () => {\n  const { animals, getAnimals } = useContext(AnimalContext);\n\n  const history = useHistory();\n\n  useEffect(() => getAnimals, []);\n\n\n  return (\n    <div className=\"animals\">\n       <h2>Animals</h2>\n      <button onClick={() => {history.push(\"/animals/create\")}}>\n            Add Animal\n          </button>\n      {\n        animals.map(animal => {\n          return <AnimalCard key={animal.id} animal={animal} />\n        })\n      }\n    </div>\n  );\n};","/Users/christinaashworth/workspace/kennels/src/components/customer/CustomerList.js",["119"],"import React, { useContext, useEffect } from \"react\";\nimport { CustomerContext } from \"./CustomerProvider\";\nimport { CustomerCard } from \"./Customer\";\nimport \"./Customer.css\";\n\nexport const CustomerList = () => {\n  const { customers, getCustomers } = useContext(CustomerContext);\n\n  useEffect(() => {\n    console.log(\"CustomerList: useEffect - getCustomers\");\n    getCustomers();\n\n  }, []);\n\n\n  return (\n    <div className=\"customers\">\n      {console.log(\"CustomerList: Render\", customers)}\n      {\n        customers.map(customer => {\n          return <CustomerCard key={customer.id} customer={customer} />\n        })\n      }\n    </div>\n  );\n};","/Users/christinaashworth/workspace/kennels/src/components/customer/CustomerProvider.js",[],"/Users/christinaashworth/workspace/kennels/src/components/employee/EmployeeList.js",["120"],"import React, { useContext, useEffect } from \"react\";\nimport { EmployeeContext } from \"./EmployeeProvider\";\nimport { EmployeeCard } from \"./Employee\";\nimport \"./Employee.css\";\nimport { useHistory } from 'react-router-dom';\n\nexport const EmployeeList = () => {\n  const { employees, getEmployees } = useContext(EmployeeContext);\n\n  useEffect(() => {\n    console.log(\"EmployeeList: useEffect - getEmployees\");\n    getEmployees();\n\n  }, []);\n\n  const history = useHistory();\n\n  return (\n    <div className=\"employees\">\n    <h2>Employees</h2>\n      <button onClick={() => {history.push(\"/employees/create\")}}>\n            New Employee\n      </button>\n      {\n        employees.map(employee => {\n          return <EmployeeCard key={employee.id} employee={employee} />\n        })\n      }\n    </div>\n  );\n};","/Users/christinaashworth/workspace/kennels/src/components/employee/EmployeeProvider.js",[],"/Users/christinaashworth/workspace/kennels/src/components/location/LocationProvider.js",[],"/Users/christinaashworth/workspace/kennels/src/components/location/LocationList.js",["121"],"import React, { useContext, useEffect } from \"react\";\nimport { LocationContext } from \"./LocationProvider\";\nimport { LocationCard } from \"./Location\";\nimport \"./Location.css\";\nimport { useHistory } from 'react-router-dom';\n\nexport const LocationList = () => {\n  const { locations, getLocations } = useContext(LocationContext);\n\n  useEffect(() => {\n    console.log(\"LocationList: useEffect - getLocations\");\n    getLocations();\n\n  }, []);\n\n  const history = useHistory();\n\n\n  return (\n    <div className=\"locations\">\n       <h2>Locations</h2>\n      <button onClick={() => {history.push(\"/locations/create\")}}>\n            New Location\n      </button>\n      {\n        locations.map(location => {\n          return <LocationCard key={location.id} location={location} />\n        })\n      }\n    </div>\n  );\n};","/Users/christinaashworth/workspace/kennels/src/components/animal/AnimalForm.js",["122"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { LocationContext } from \"../location/LocationProvider\";\nimport { AnimalContext } from \"../animal/AnimalProvider\";\nimport { CustomerContext } from \"../customer/CustomerProvider\";\nimport \"./Animal.css\";\nimport { useHistory, useParams } from 'react-router-dom';\n\nexport const AnimalForm = () => {\n    const { addAnimal, getAnimalById, updateAnimal } = useContext(AnimalContext);\n    const { locations, getLocations } = useContext(LocationContext);\n    const { customers, getCustomers } = useContext(CustomerContext);\n\n    //for edit, hold on to state of animal in this view\n    const [animal, setAnimal] = useState({\n      name: \"\",\n      breed: \"\",\n      customerId: 0,\n      locationId: 0\n    });\n\n    //wait for data before button is active. Look at the button to see how it's setting itself to disabled or not based on this state\n    const [isLoading, setIsLoading] = useState(true);\n\n    // Now that the form can be used for editing as well as adding an animal, you need access to the animal id for fetching the animal you want to edit\n    const { animalId } = useParams();\n\t  const history = useHistory();\n\n    //when field changes, update state. This causes a re-render and updates the view.\n    //Controlled component\n    const handleControlledInputChange = (event) => {\n      //When changing a state object or array,\n      //always create a copy make changes, and then set state.\n      const newAnimal = { ...animal }\n      //animal is an object with properties.\n      //set the property to the new value\n      newAnimal[event.target.id] = event.target.value\n      //update state\n      setAnimal(newAnimal)\n    };\n\n    const handleSaveAnimal = () => {\n      if (parseInt(animal.locationId) === 0) {\n          window.alert(\"Please select a location\")\n      } else {\n        //disable the button - no extra clicks\n        setIsLoading(true);\n        // This is how we check for whether the form is being used for editing or creating. If the URL that got us here has an id number in it, we know we want to update an existing record of an animal\n        if (animalId){\n          //PUT - update\n          updateAnimal({\n              id: animal.id,\n              name: animal.name,\n              breed: animal.breed,\n              locationId: parseInt(animal.locationId),\n              customerId: parseInt(animal.customerId)\n          })\n          .then(() => history.push(`/animals/detail/${animal.id}`))\n        }else {\n          //POST - add\n          addAnimal({\n              name: animal.name,\n              breed: animal.breed,\n              locationId: parseInt(animal.locationId),\n              customerId: parseInt(animal.customerId)\n          })\n          .then(() => history.push(\"/animals\"))\n        }\n      }\n    };\n\n    // Get customers and locations. If animalId is in the URL, getAnimalById\n    useEffect(() => {\n      getCustomers().then(getLocations).then(() => {\n        if (animalId) {\n          getAnimalById(animalId)\n          .then(animal => {\n              setAnimal(animal)\n              setIsLoading(false)\n          })\n        } else {\n          setIsLoading(false)\n        }\n      })\n    }, []);\n\n    return (\n      <form className=\"animalForm\">\n        <h2 className=\"animalForm__title\">{animalId ? \"Edit Animal\" : \"Add Animal\"}</h2>\n        <fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"animalName\">Animal name: </label>\n            <input type=\"text\" id=\"name\" required autoFocus className=\"form-control\"\n            placeholder=\"Animal name\"\n            onChange={handleControlledInputChange}\n            value={animal.name}/>\n          </div>\n        </fieldset>\n        <fieldset>\n          <div className=\"form-group\">\n              <label htmlFor=\"breed\">Animal breed:</label>\n              <input type=\"text\" id=\"breed\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Animal breed\" value={animal.breed}/>\n          </div>\n        </fieldset>\n        <fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"location\">Assign to location: </label>\n            <select value={animal.locationId} id=\"locationId\" className=\"form-control\" onChange={handleControlledInputChange}>\n              <option value=\"0\">Select a location</option>\n              {locations.map(l => (\n                <option key={l.id} value={l.id}>\n                  {l.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </fieldset>\n        <fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"customer\">Customer: </label>\n            <select value={animal.customerId} id=\"customerId\" className=\"form-control\" onChange={handleControlledInputChange}>\n              <option value=\"0\">Select a customer</option>\n              {customers.map(c => (\n                <option key={c.id} value={c.id}>\n                    {c.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </fieldset>\n        <button className=\"btn btn-primary\"\n          disabled={isLoading}\n          onClick={event => {\n            event.preventDefault() // Prevent browser from submitting the form and refreshing the page\n            handleSaveAnimal()\n          }}>\n        {animalId ? \"Save Animal\" : \"Add Animal\"}</button>\n      </form>\n    )\n};","/Users/christinaashworth/workspace/kennels/src/components/employee/EmployeeForm.js",["123"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { EmployeeContext } from \"../employee/EmployeeProvider\"\nimport { LocationContext } from \"../location/LocationProvider\"\nimport \"./Employee.css\"\nimport { useHistory, useParams } from 'react-router-dom';\n\nexport const EmployeeForm = () => {\n    const { addEmployee, getEmployeeById, updateEmployee } = useContext(EmployeeContext)\n    const { locations, getLocations } = useContext(LocationContext)\n\n    const [employee, setEmployee] = useState({\n      name: \"\",\n      locationId: 0\n    })\n\n    const [isLoading, setIsLoading] = useState(true);\n\n    const { employeeId } = useParams();\n    const history = useHistory();\n    \n    const handleControlledInputChange = (event) => {\n      const newEmployee = { ...employee }\n      newEmployee[event.target.id] = event.target.value\n      setEmployee(newEmployee)\n    }\n\n    const handleSaveEmployee = () => {\n      if (parseInt(employee.locationId) === 0) {\n          window.alert(\"Please select a location\")\n      } else {\n        setIsLoading(true);\n        if (employeeId){\n          updateEmployee({\n              id: employee.id,\n              name: employee.name,\n              locationId: parseInt(employee.locationId),\n          })\n          .then(() => history.push(`/employees/detail/${employee.id}`))\n        }else {\n          addEmployee({\n              name: employee.name,\n              locationId: parseInt(employee.locationId),\n          })\n          .then(() => history.push(\"/employees\"))\n        }\n      }\n    }\n\n    useEffect(() => {\n      getLocations().then(() => {\n        if (employeeId) {\n          getEmployeeById(employeeId)\n          .then(employee => {\n              setEmployee(employee)\n              setIsLoading(false)\n          })\n        } else {\n          setIsLoading(false)\n        }\n      })\n    }, [])\n\n    return (\n      <form className=\"employeeForm\">\n        <h2 className=\"employeeForm__title\">{employeeId ? \"Edit Employee\" : \"Add Employee\"}</h2>\n        <fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"employeeName\">Employee name: </label>\n            <input type=\"text\" id=\"name\" required autoFocus className=\"form-control\"\n            placeholder=\"Employee name\"\n            onChange={handleControlledInputChange}\n            value={employee.name}/>\n          </div>\n        </fieldset>\n        <fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"location\">Assign to location: </label>\n            <select value={employee.locationId} id=\"locationId\" className=\"form-control\" onChange={handleControlledInputChange}>\n              <option value=\"0\">Select a location</option>\n              {locations.map(l => (\n                <option key={l.id} value={l.id}>\n                  {l.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </fieldset>\n        <button className=\"btn btn-primary\"\n          disabled={isLoading}\n          onClick={event => {\n            event.preventDefault() \n            handleSaveEmployee()\n          }}>\n        {employeeId ? \"Save Employee\" : \"Add Employee\"}</button>\n      </form>\n    )\n}","/Users/christinaashworth/workspace/kennels/src/components/location/LocationForm.js",["124"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { LocationContext } from \"../location/LocationProvider\";\nimport \"./Location.css\";\nimport { useHistory, useParams } from 'react-router-dom';\n\nexport const LocationForm = () => {\n  const { addLocation, getLocationById, updateLocation } = useContext(LocationContext);\n\n    //for edit, hold on to state of location in this view\n    const [location, setLocation] = useState({\n      name: \"\",\n      address: \"\"\n    });\n\n    //wait for data before button is active. Look at the button to see how it's setting itself to disabled or not based on this state\n    const [isLoading, setIsLoading] = useState(true);\n\n    // Now that the form can be used for editing as well as adding a location, you need access to the location id for fetching the location you want to edit\n    const { locationId } = useParams();\n\t  const history = useHistory();\n\n    //when field changes, update state. This causes a re-render and updates the view.\n    //Controlled component\n    const handleControlledInputChange = (event) => {\n      //When changing a state object or array,\n      //always create a copy make changes, and then set state.\n      const newLocation = { ...location }\n      //location is an object with properties.\n      //set the property to the new value\n      newLocation[event.target.id] = event.target.value\n      //update state\n      setLocation(newLocation)\n    };\n\n    const handleSaveLocation = () => {\n      //disable the button - no extra clicks\n      setIsLoading(true);\n      // This is how we check for whether the form is being used for editing or creating. If the URL that got us here has an id number in it, we know we want to update an existing record of a location\n      if (locationId){\n      //PUT - update\n        updateLocation({\n            id: location.id,\n            name: location.name,\n            address: location.address\n          })\n          .then(() => history.push(`/locations/detail/${location.id}`))\n        }else {\n          //POST - add\n          addLocation({\n            name: location.name,\n            address: location.address\n          })\n          .then(() => history.push(\"/locations\"))\n        }\n    };\n\n    //If locationId is in the URL, getLocationById\n    useEffect(() => {\n      if (locationId) {\n        getLocationById(locationId)\n          .then(location => {\n              setLocation(location)\n              setIsLoading(false)\n          })\n        } else {\n          setIsLoading(false)\n        }\n      }\n    , []);\n\n    return (\n      <form className=\"locationForm\">\n        <h2 className=\"locationForm__title\">{locationId ? \"Edit Location\" : \"Add Location\"}</h2>\n        <fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"locationName\">Location name: </label>\n            <input type=\"text\" id=\"name\" required autoFocus className=\"form-control\"\n            placeholder=\"Location name\"\n            onChange={handleControlledInputChange}\n            value={location.name}/>\n          </div>\n        </fieldset>\n        <fieldset>\n          <div className=\"form-group\">\n              <label htmlFor=\"address\">Address:</label>\n              <input type=\"text\" id=\"address\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Address\" value={location.address}/>\n          </div>\n        </fieldset>\n        <button className=\"btn btn-primary\"\n          disabled={isLoading}\n          onClick={event => {\n            event.preventDefault() // Prevent browser from submitting the form and refreshing the page\n            handleSaveLocation()\n          }}>\n        {locationId ? \"Save Location\" : \"Add Location\"}</button>\n      </form>\n    )\n};","/Users/christinaashworth/workspace/kennels/src/components/animal/AnimalDetail.js",["125"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { AnimalContext } from \"./AnimalProvider\";\nimport \"./Animal.css\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom';\n\nexport const AnimalDetail = () => {\n  const { getAnimalById, releaseAnimal } = useContext(AnimalContext)\n\tconst [animal, setAnimal] = useState({})\n  const {animalId} = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    getAnimalById(animalId)\n    .then((response) => {\n      setAnimal(response)\n    })\n    }, []);\n\n    const handleRelease = () => {\n      releaseAnimal(animal.id)\n        .then(() => {\n          history.push(\"/animals\")\n        })\n    };\n\n  return (\n    <section className=\"animal\">\n      <h3 className=\"animal__name\">{animal.name}</h3>\n      <div className=\"animal__breed\">{animal.breed}</div>\n      <div className=\"animal__location\">Location: {animal.location?.name}</div>\n      <div className=\"animal__owner\">Customer: {animal.customer?.name}</div>\n      <button onClick={() => {\n        history.push(`/animals/edit/${animal.id}`)\n      }}>Edit</button>\n      <button onClick={handleRelease}>Be free!</button>\n\n    </section>\n  );\n};","/Users/christinaashworth/workspace/kennels/src/components/employee/EmployeeDetail.js",["126"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { EmployeeContext } from \"./EmployeeProvider\";\nimport \"./Employee.css\";\nimport { useParams} from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom';\n\n\nexport const EmployeeDetail = () => {\n  const { getEmployeeById } = useContext(EmployeeContext);\n\tconst [employee, setEmployee] = useState({});\n  const {employeeId} = useParams();\n  const history = useHistory()\n\n  useEffect(() => {\n    getEmployeeById(employeeId)\n    .then((response) => {\n      setEmployee(response)\n    })\n    }, []);\n\n  return (\n    <section className=\"employee\">\n      <h3 className=\"employee__name\">{employee.name}</h3>\n      <div className=\"employee__location\">Location: {employee.location?.name}</div>\n      <button onClick={() => {\n        history.push(`/employees/edit/${employee.id}`)\n      }}>Edit</button>\n\n    </section>\n  );\n};","/Users/christinaashworth/workspace/kennels/src/components/location/LocationDetail.js",["127"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { LocationContext } from \"./LocationProvider\";\nimport \"./Location.css\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom';\n\n\nexport const LocationDetail = () => {\n  const { getLocationById } = useContext(LocationContext);\n\tconst [location, setLocation] = useState({})\n  const {locationId} = useParams();\n  const history = useHistory();\n  \n  const nameFunction = (array) => {\n    if (array) {\n    return array.map(obj => obj.name).join(\", \")\n    }\n  };\n  const animalNames = nameFunction(location.animals);\n  const employeeNames = nameFunction(location.employees);\n\n  useEffect(() => {\n    getLocationById(locationId)\n    .then((response) => {\n      setLocation(response)\n    })\n    }, []);\n\n  return (\n    <section className=\"location\">\n      <h3 className=\"location__name\">{location.name}</h3>\n      <div className=\"location__address\">{location.address}</div><br></br>\n      <div className=\"location__animals\">Current Residents: {animalNames}</div>\n      <div className=\"location__employees\"> Employees: {employeeNames}</div>\n      <button onClick={() => {\n        history.push(`/locations/edit/${location.id}`)\n      }}>Edit</button>\n    </section>\n  )\n};","/Users/christinaashworth/workspace/kennels/src/components/auth/Register.js",["128"],"/Users/christinaashworth/workspace/kennels/src/components/auth/Login.js",["129"],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"130","replacedBy":"134"},{"ruleId":"132","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":12,"column":31,"nodeType":"138","endLine":12,"endColumn":33,"suggestions":"139"},{"ruleId":"136","severity":1,"message":"140","line":13,"column":6,"nodeType":"138","endLine":13,"endColumn":8,"suggestions":"141"},{"ruleId":"136","severity":1,"message":"142","line":14,"column":6,"nodeType":"138","endLine":14,"endColumn":8,"suggestions":"143"},{"ruleId":"136","severity":1,"message":"144","line":14,"column":6,"nodeType":"138","endLine":14,"endColumn":8,"suggestions":"145"},{"ruleId":"136","severity":1,"message":"146","line":84,"column":8,"nodeType":"138","endLine":84,"endColumn":10,"suggestions":"147"},{"ruleId":"136","severity":1,"message":"148","line":61,"column":8,"nodeType":"138","endLine":61,"endColumn":10,"suggestions":"149"},{"ruleId":"136","severity":1,"message":"150","line":69,"column":7,"nodeType":"138","endLine":69,"endColumn":9,"suggestions":"151"},{"ruleId":"136","severity":1,"message":"152","line":18,"column":8,"nodeType":"138","endLine":18,"endColumn":10,"suggestions":"153"},{"ruleId":"136","severity":1,"message":"154","line":19,"column":8,"nodeType":"138","endLine":19,"endColumn":10,"suggestions":"155"},{"ruleId":"136","severity":1,"message":"150","line":27,"column":8,"nodeType":"138","endLine":27,"endColumn":10,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":9,"column":11,"nodeType":"159","messageId":"160","endLine":9,"endColumn":25},{"ruleId":"157","severity":1,"message":"161","line":9,"column":11,"nodeType":"159","messageId":"160","endLine":9,"endColumn":19},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],["162"],["163"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAnimals'. Either include it or remove the dependency array.","ArrayExpression",["164"],"React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.",["165"],"React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.",["166"],"React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array.",["167"],"React Hook useEffect has missing dependencies: 'animalId', 'getAnimalById', 'getCustomers', and 'getLocations'. Either include them or remove the dependency array.",["168"],"React Hook useEffect has missing dependencies: 'employeeId', 'getEmployeeById', and 'getLocations'. Either include them or remove the dependency array.",["169"],"React Hook useEffect has missing dependencies: 'getLocationById' and 'locationId'. Either include them or remove the dependency array.",["170"],"React Hook useEffect has missing dependencies: 'animalId' and 'getAnimalById'. Either include them or remove the dependency array.",["171"],"React Hook useEffect has missing dependencies: 'employeeId' and 'getEmployeeById'. Either include them or remove the dependency array.",["172"],["173"],"no-unused-vars","'verifyPassword' is assigned a value but never used.","Identifier","unusedVar","'password' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"186","fix":"192"},"Update the dependencies array to be: [getAnimals]",{"range":"193","text":"194"},"Update the dependencies array to be: [getCustomers]",{"range":"195","text":"196"},"Update the dependencies array to be: [getEmployees]",{"range":"197","text":"198"},"Update the dependencies array to be: [getLocations]",{"range":"199","text":"200"},"Update the dependencies array to be: [animalId, getAnimalById, getCustomers, getLocations]",{"range":"201","text":"202"},"Update the dependencies array to be: [employeeId, getEmployeeById, getLocations]",{"range":"203","text":"204"},"Update the dependencies array to be: [getLocationById, locationId]",{"range":"205","text":"206"},"Update the dependencies array to be: [animalId, getAnimalById]",{"range":"207","text":"208"},"Update the dependencies array to be: [employeeId, getEmployeeById]",{"range":"209","text":"210"},{"range":"211","text":"206"},[377,379],"[getAnimals]",[386,388],"[getCustomers]",[433,435],"[getEmployees]",[433,435],"[getLocations]",[3195,3197],"[animalId, getAnimalById, getCustomers, getLocations]",[1848,1850],"[employeeId, getEmployeeById, getLocations]",[2525,2527],"[getLocationById, locationId]",[559,561],"[animalId, getAnimalById]",[569,571],"[employeeId, getEmployeeById]",[798,800]]